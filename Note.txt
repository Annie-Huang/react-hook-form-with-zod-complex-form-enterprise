Building Enterprise-Grade Multi-Step Forms in React (https://www.youtube.com/watch?v=i5q53ZSOvjU)

https://github.com/codegenixdev/complex-form-enterprise
https://github.com/Annie-Huang/react-hook-form-with-zod-complex-form-enterprise

C:\react\complex-form-enterprise-main                       <----- A copy of Code Genix code
C:\react\react-hook-form-with-zod-complex-form-enterprise   <----- my code as I copy through the project

====================================================================================================

PS C:\react> npm create vite@latest react-hook-form-with-zod-complex-form-enterprise -- --template react-ts
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install react-router
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install path --save-dev
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @vitejs/plugin-react-swc --save-dev
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm uninstall @vitejs/plugin-react
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @mui/material @mui/icons-material @mui/lab @mui/x-date-pickers
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install zustand
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install react-hook-form
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install material-ui-popup-state

https://stackoverflow.com/questions/74597732/uncaught-syntaxerror-export-import-react3-is-not-defined-in-module-at-chunk
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @emotion/react @emotion/styled

PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install immer
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install zod @hookform/resolvers
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install validator
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @types/validator --save-dev
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install react-number-format
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @tanstack/react-query
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install date-fns          <--- required by @mui/x-date-pickers


PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install @hookform/error-message
PS C:\react\react-hook-form-with-zod-complex-form-enterprise> npm install notistack

--------------------------
Tech stack of the project:
- React 18
- Zustand
- React Hook Form
- Mui

--------------------------

Form data format - Personal Info:
Phone Number: (555) 555-5555
Social Security Number: 555 55 5555

In the History page,
- if user choose 'other' for reasons for leaving previous jobs, a new field of 'otherReasonsForLeaving' is added into zod schema through superRefine
- EducationalInstitutions component is use useFieldArray. educationalInstitutions must at least has 1, which I think it is wrong.
- PreviousEmployers component is use useFieldArray. previousEmployers must at least has 1, which I think it is wrong.
- All the dropdown list options from this app is pretend to be fetched from backend, we create a async/await call + a wait call, Also showing you how to push into the options list.

In Skills page,
- if user choose 'other' for Core Completencies, a new field of 'otherCoreCompetencies' is added into zod schema through superRefine. Core Completencies is also a multiple choice dropdown
- SkillSets components is use useFieldArray.
- Each Skill Set has 3 level of drop down and last dropdown is multiple choices dropdown

In Additional Info page,
- References components is use useFieldArray.
- use MUI slider component for salary expectations

Can look at devtool for all the data that submitted when you finishes all the steps of the form.

The reason the props can be jumped a few levels rather than pass it down one by one is that in each form (form.tsx), we use
import { FormProvider } from 'react-hook-form';
Then in each UI component (e.g. text-field.tsx), we can just use
const { control, readOnly } = useFormContext<T>();
to get all the props out of it and injest into the component.
